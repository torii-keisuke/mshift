<div>
  <%= render partial: "layouts/header" %>
  <%= render partial: "layouts/sidebar" %>
</div>
<div class="pt-[72px] pl-[184px] pb-[88px]">
  <div class="px-14">
    <%= link_to user_event_members_path(current_user.id, @event.id), class: "block mt-10 text-main-blue leading-none stroke-main-blue hover:text-main-bluehover hover:stroke-main-bluehover" do %>
      <div class="flex gap-x-2 w-fit">
        <%= embedded_svg('back-image') %>
        <div>戻る</div>
      </div>
    <% end %>
    <h1 class="my-6 text-2xl font-bold leading-none">スタッフのシフトの設定</h1>
    <%= search_form_for @q, url: user_event_members_schedules_path(current_user.id, @event.id) do |f| %>
      <%= render partial: "layouts/search_form", locals: { f: f } %>
    <% end %>
    <div class="flex justify-between items-center">
      <div class="leading-none">スタッフのシフトの入れない時間帯を選択してください</div>
      <% if MembersSchedule.where(event_id: @event.id).exists? %>
        <%= link_to "修正する", edit_members_schedules_user_event_members_schedules_path(current_user.id, @event.id), class: "block text-center ml-auto mb-4 py-1 w-[104px] h-8 text-white font-bold bg-main-red rounded-md main-shadow hover:bg-main-redhover" %>
      <% else %>
        <div class="block text-center ml-auto mb-4 py-1 w-[104px] h-8 text-white font-bold bg-line-100 rounded-md">修正する</div>
      <% end %>
    </div>
    <div class="pb-14">
      <%= form_with model: @members_schedule, url: user_event_members_schedules_path(current_user.id, @event.id), id: "area-select-form", method: :post, data: { turbo: false } do |f| %>
        <div class="w-full overflow-x-scroll border-x border-t border-line-100">
          <table class="">
            <tr>
              <th width="120px" height="32px" class="border-r border-b border-line-100 min-w-[120px] bg-[#EBEBEB]">
                <div class="flex justify-center items-center gap-x-2">
                  <input type="checkbox" id="all-select" onchange="allCheck()">
                  <label for="all-select">すべて選択</label>
                </div>
              </th>
              </th>
              <% @schedules.each_with_index do |schedule, i| %>
                <th width="120px" height="32px" onmouseover="columnMouseover(this.id)" onmouseleave="columnMouseleave(this.id)" id="<%= i %>" name="js-hover-<%= i %>" class="border-r border-b border-line-100 leading-none min-w-[72px] w-[72px] bg-[#EBEBEB]">
                  <%= schedule.time_zone %>
                  <input type="checkbox" id="js-column-input-<%= i %>" value="<%= i %>" onchange="columnCheck(this.value)">
                </th>
              <% end %>
            </tr>
            <% @members.each_with_index do |member, i| %>
              <div class="overflow-scroll w-full h-full">
                <tr height="32px" width="120px" align="center" name="js-line-hover-<%= i %>" id="<%= i %>" onmouseover="lineMouseover(this.id)" onmouseleave="lineMouseleave(this.id)" class="text-base font-bold border-b border-line-100">
                  <td class="border-r border-line-100 text-main-black">
                    <%= member.name %>
                    <input type="checkbox" id="js-line-input-<%= i %>" value="<%= i %>" onchange="lineCheck(this.value)">
                  </td>
                  <% @schedules.each_with_index do |schedule, t| %>
                    <% if MembersSchedule.exists?(schedule_id: schedule.id, member_id: member.id) %>
                      <td class="border-r border-line-100 bg-[#A9A9A9]">
                        <div class="text-white font-bold">休み</div>
                      </td>
                    <% else %>
                      <td onmouseover="columnMouseover(this.id)" onmouseleave="columnMouseleave(this.id)" id="<%= t %>" name="js-hover-<%= t %>" class="border-r border-line-100 pb-1">
                        <%= f.check_box :schedule_ids, { multiple: true, include_hidden: false, class: "check js-all-check js-line-checks-#{ i } js-column-checks-#{ t }" }, [member.id, schedule.id] %>
                      </td>
                    <% end %>
                  <% end %>
                </tr>
              </div>
            <% end %>
          </table>
        </div>
        <div class="fixed bottom-0 left-[184px] py-6 w-full h-[88px] bg-main-white border-t-2 border-line-100 z-20">
          <%= f.submit "保存する", class: "absolute right-[240px] w-32 h-10 bg-accent-logo text-main-white font-bold px-8 py-2 rounded-md cursor-pointer main-shadow hover:bg-main-bluehover", id: "area-select-submit-btn" %>
        </div>
      <% end %>
    </div>
  </div>
</div>
<script>
  function allCheck(){
    const checkboxes = document.querySelectorAll("input.js-all-check")
    const mainInput = document.querySelector("input#all-select")
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function lineCheck(e) {
    const mainInput = document.getElementById(`js-line-input-${e}`)
    const checkboxes = document.querySelectorAll(`input.js-line-checks-${e}`)
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function columnCheck(e) {
    const mainInput = document.getElementById(`js-column-input-${e}`)
    const checkboxes = document.querySelectorAll(`input.js-column-checks-${e}`)
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function lineMouseover(id){
    const hoverElement = document.getElementsByName(`js-line-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.background = 'orange'
    })
  }

  function lineMouseleave(id){
    const hoverElement = document.getElementsByName(`js-line-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.background = ''
    })
  }

  function columnMouseover(id){
    const hoverElement = document.getElementsByName(`js-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.backgroundColor = 'orange';
    })
  }

  function columnMouseleave(id){
    const hoverElement = document.getElementsByName(`js-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.backgroundColor = '';
    })
  }

  var object = {
        strageName: 'checkBoxStatus',
    };
    object.strageData = sessionStorage.getItem(object.strageName);
    object.strageData = object.strageData ? JSON.parse(object.strageData) : [];
    window.addEventListener('DOMContentLoaded', () => { //まずこのページ開いた時に動く
        object.checkBoxList = document.querySelectorAll('.check');//class名がcheckの要素を全てlistに変えてobject.checkBoxListに格納する
        object.strageData.forEach((bool, i) => object.checkBoxList[i].checked = bool);//1行上で取得した要素からチェックボックスのステータスをobject.strageDataに基づいて変更していく
    });

    window.addEventListener('beforeunload', () => { //リロードする直前に動く
        object.checkBoxList.forEach((elem, i) => object.strageData[i] = elem.checked);
        //リロードする直前にobject.strageDataの内容を更新している
        sessionStorage.setItem(object.strageName, JSON.stringify(object.strageData));//更新した内容をsessionStorageに保存
    });
</script>
