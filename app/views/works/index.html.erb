<div>
  <%= render partial: "layouts/header" %>
  <%= render partial: "layouts/sidebar" %>
</div>
<div class="pt-[72px] pl-[184px]">
  <div class="px-14">
    <h1 class="mt-10 text-2xl font-bold">仕事管理</h1>
    <% if @event.works.present? %>
      <div class="flex justify-between items-center">
        <div class="text-main-black">
          人員が必要な時間帯を選択してください
        </div>
        <% if WorksSchedule.where(event_id: @event.id).exists? %>
        <%= link_to "修正する", edit_works_schedules_user_event_works_schedules_path(current_user.id, @event.id), class: "block text-center ml-auto mb-4 py-1 w-[104px] h-8 text-white font-bold bg-main-red rounded-md main-shadow hover:bg-main-redhover" %>
        <% else %>
          <div class="block text-center ml-auto mb-4 py-1 w-[104px] h-8 text-white font-bold bg-line-100 rounded-md">
            修正する
          </div>
        <% end %>
      </div>
      <div class="pb-8 border-b border-line-100">
        <%= form_with model: @works_schedule, url: user_event_works_schedules_path(current_user.id, @event.id), method: :post, data: { turbo: false } do |f| %>
          <div class="overflow-x-scroll border-x">
            <table class="border overflow-x-scroll">
              <tr width="" height="32px">
                <th class="bg-[#EBEBEB] border-r border-b min-w-[120px]">
                  <div class="flex justify-center items-center gap-x-2">
                    <input type="checkbox" id="all-select" onchange="allCheck()">
                    <label for="all-select">すべて選択</label>
                  </div>
                </th>
                <% @schedules.each_with_index do |schedule, i| %>
                  <th onmouseover="columnMouseover(this.id)" onmouseleave="columnMouseleave(this.id)" id="<%= i %>" name="js-hover-<%= i %>" class="bg-[#EBEBEB] border-r border-b leading-none min-w-[72px] w-[72px]">
                    <%= schedule.time_zone %>
                    <input type="checkbox" id="js-column-input-<%= i %>" value="<%= i %>" onchange="columnCheck(this.value)">
                  </th>
                <% end %>
              </tr>
              <% @works.each_with_index do |work, i| %>
                <tr height="32px" width="120px" align="center" name="js-line-hover-<%= i %>" id="<%= i %>" onmouseover="lineMouseover(this.id)" onmouseleave="lineMouseleave(this.id)" class="text-base font-bold border-b">
                  <td class="flex items-center justify-center gap-2 px-1 text-left border-r text-main-blue hover:underline">
                    <%= link_to work.name, edit_user_event_work_path(current_user.id, @event.id, work.id), method: :get %>
                    <input type="checkbox" id="js-line-input-<%= i %>" value="<%= i %>" onchange="lineCheck(this.value)">
                  </td>
                  <% @schedules.each_with_index do |schedule, t| %>
                    <% if WorksSchedule.exists?(schedule_id: schedule.id, work_id: work.id) %>
                      <td class="border-r bg-main-blue">
                        <div class="text-white font-bold">登録</div>
                      </td>
                    <% else %>
                      <td onmouseover="columnMouseover(this.id)" onmouseleave="columnMouseleave(this.id)" id="<%= t %>" name="js-hover-<%= t %>" class="border-r pb-1">
                        <%= f.check_box :schedule_ids, { multiple: true, include_hidden: false, class: "js-all-check js-line-checks-#{ i } js-column-checks-#{ t }" }, [work.id, schedule.id] %>
                      </td>
                    <% end %>
                  <% end %>
                </tr>
              <% end %>
            </table>
          </div>
          <div class="pt-6">
            <%= f.submit "登録する", class: "block ml-auto w-32 h-10 text-main-white bg-main-blue rounded-md cursor-pointer  main-shadow hover:bg-main-bluehover" %>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="flex flex-col justify-center items-center w-full pt-10">
        <%= embedded_svg('fv-work-member-image', class: "") %>
        <p class="mt-3 text-2xl text-main-black">仕事を追加してください</p>
      </div>
    <% end %>
    <div class="pt-8 mb-20">
      <%= form_with model: @work, url: user_event_works_path(current_user.id, @event.id) do |f| %>
        <%= f.label :name, "仕事を追加する", class: "block mb-6" %>
        <div class="flex gap-[104px] mb-8">
          <%= f.text_field :name, placeholder: "（例）正門警備①", class: "block w-full border-line-100 rounded-md placeholder-line-100" %>
          <%= f.submit "追加する", class: "block min-w-[128px] w-32 h-10 text-main-white bg-main-blue rounded-md cursor-pointer main-shadow hover:bg-main-bluehover" %>
        </div>
      <% end %>



      <!--
      -->
        <%= form_with model: @work, url: import_user_event_works_path(current_user.id, @event.id), data: { turbo: false } do |f| %>
          <div class="">
            <%= f.label :file, "Excelファイルでアップロード(.xslxの拡張子で)", class: "block text-center mb-6 px-2 py-2 w-full h-12 border-2 border-accent-logo text-lg text-accent-logo font-bold rounded-md main-shadow hover:text-main-bluehover hover:border-main-bluehover" %>
            <%= f.file_field :file, data: { action: "change->file-form#realize", target: "input" }, class: "hidden" %>
            <div data-file-form-target="fileName" class=" text-main-black"></div>
          </div>
          <%= f.submit "登録する", class: "block ml-auto mt-8 h-10 w-32 text-center text-white font-bold bg-main-blue rounded-md main-shadow hover:bg-main-bluehover" %>
        <% end %>
        <%= button_to "仕事を全部削除", destroy_together_user_event_works_path(current_user.id, @event.id), method: :delete, class: "block ml-auto py-8 text-xl text-main-red leading-none hover:underline" %>
    </div>
  </div>
</div>
<script>
  function allCheck(){
    const checkboxes = document.querySelectorAll("input.js-all-check")
    const mainInput = document.querySelector("input#all-select")
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function lineCheck(e) {
    const mainInput = document.getElementById(`js-line-input-${e}`)
    const checkboxes = document.querySelectorAll(`input.js-line-checks-${e}`)
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function columnCheck(e) {
    const mainInput = document.getElementById(`js-column-input-${e}`)
    const checkboxes = document.querySelectorAll(`input.js-column-checks-${e}`)
    checkboxes.forEach((checkbox) => {
      checkbox.checked = mainInput.checked;
    });
  }

  function lineMouseover(id){
    const hoverElement = document.getElementsByName(`js-line-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.background = 'orange'
    })
  }

  function lineMouseleave(id){
    const hoverElement = document.getElementsByName(`js-line-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.background = ''
    })
  }

  function columnMouseover(id){
    const hoverElement = document.getElementsByName(`js-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.backgroundColor = 'orange';
    })
  }

  function columnMouseleave(id){
    const hoverElement = document.getElementsByName(`js-hover-${id}`)
    hoverElement.forEach((el) => {
      el.style.backgroundColor = '';
    })
  }
</script>
